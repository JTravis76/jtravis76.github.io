# Uploading and Download to Azure Storage via Azure Function

```cs
[FunctionName("PostFiles")]
public async Task<IActionResult> PostFiles(
    [HttpTrigger(AuthorizationLevel.Anonymous, "post", Route = "Files")]
    HttpRequest req
)
{
    // Read files
    var formdata = await req.ReadFormAsync();
    var file = req.Form.Files[0];


    /*== Create the Azure Storage account
     * Create a container within the storage
     * Copy connection string
     */
    string containerName = "fileupload";
    string connStr = "DefaultEndpointsProtocol=https;AccountName=XXXX;AccountKey=XXXX;EndpointSuffix=core.windows.net";
    
    // Add optional tag or metadata
    var options = new BlobUploadOptions()
    {
        Tags = new Dictionary<string, string>()
        {
            { "tag", "test" }
        },
        Metadata = new Dictionary<string, string>()
        {
            { "revision", "1" }
        },
    };

    //// == UPLOAD - Option 1
    //var container = new BlobContainerClient(connStr, containerName);

    //using (var ms = new System.IO.MemoryStream())
    //{
    //    //-- UPLOAD
    //    await file.OpenReadStream().CopyToAsync(ms);
    //    ms.Position = 0;

    //    //await container.SetMetadataAsync(options.Tags);
    //    container.GetBlobClient(file.FileName).Upload(ms, options);
    //}

    // == UPLOAD - Option 2
    var client = new BlobServiceClient(connStr);

    using (var ms = new System.IO.MemoryStream())
    {
        client.GetBlobContainerClient(containerName)
            .GetBlobClient(file.FileName)
            .Upload(ms, options);
    }

    return new OkResult();

    ////== DOWNLOAD =========
    //byte[] dl = null;
    //using (var ms = new System.IO.MemoryStream())
    //{
    //    container.GetBlobClient(file.FileName).DownloadTo(ms);
    //    ms.Position = 0;
    //    dl = ms.ToArray();
    //}

    //return new FileContentResult(dl, "application/octet-stream") { FileDownloadName = file.FileName };
}
```